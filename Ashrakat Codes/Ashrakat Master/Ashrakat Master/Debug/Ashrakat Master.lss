
Ashrakat Master.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000062e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001e  00800060  0000062e  000006a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000006c0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006f0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  0000072c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008eb  00000000  00000000  000007bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000758  00000000  00000000  000010a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000508  00000000  00000000  000017ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  00001d08  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003eb  00000000  00000000  00001de8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000ed  00000000  00000000  000021d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  000022c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e2       	ldi	r30, 0x2E	; 46
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ae 37       	cpi	r26, 0x7E	; 126
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 15 03 	jmp	0x62a	; 0x62a <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:

int main(void)
{
#ifdef MASTER_BLUETOOTH

	SPI_initMaster();								// SPI master initialize function
  82:	0e 94 65 00 	call	0xca	; 0xca <SPI_initMaster>
	USART_Init(9600); 								// initialize USART with 9600 baud rate
  86:	60 e8       	ldi	r22, 0x80	; 128
  88:	75 e2       	ldi	r23, 0x25	; 37
  8a:	80 e0       	ldi	r24, 0x00	; 0
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	0e 94 74 00 	call	0xe8	; 0xe8 <USART_Init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  92:	8b e4       	ldi	r24, 0x4B	; 75
  94:	9d e1       	ldi	r25, 0x1D	; 29
  96:	01 97       	sbiw	r24, 0x01	; 1
  98:	f1 f7       	brne	.-4      	; 0x96 <main+0x14>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x1a>
  9c:	00 00       	nop
	char Data_in;
	_delay_ms(30);									// delay until Slave function is initialized in Slave ECU
	while(1)
	{
		Data_in = USART_RxChar();	 				// Receive data from Bluetooth device
  9e:	0e 94 9a 00 	call	0x134	; 0x134 <USART_RxChar>
		if(Data_in == '1')
  a2:	81 33       	cpi	r24, 0x31	; 49
  a4:	41 f4       	brne	.+16     	; 0xb6 <main+0x34>
		{
			SPI_sendByte(0b00000010);				// Send to Slave to turn on/off LED_1
  a6:	82 e0       	ldi	r24, 0x02	; 2
  a8:	0e 94 70 00 	call	0xe0	; 0xe0 <SPI_sendByte>
			USART_SendString("LED_1 ON/OFF \n");	// Send status of LED_1 to Bluetooth receiver/transmitter
  ac:	80 e6       	ldi	r24, 0x60	; 96
  ae:	90 e0       	ldi	r25, 0x00	; 0
  b0:	0e 94 a2 00 	call	0x144	; 0x144 <USART_SendString>
  b4:	f4 cf       	rjmp	.-24     	; 0x9e <main+0x1c>
		}
		else if (Data_in == '2')
  b6:	82 33       	cpi	r24, 0x32	; 50
  b8:	91 f7       	brne	.-28     	; 0x9e <main+0x1c>
		{
			SPI_sendByte(0b00000100);				// Send to Slave to turn on/off LED_2
  ba:	84 e0       	ldi	r24, 0x04	; 4
  bc:	0e 94 70 00 	call	0xe0	; 0xe0 <SPI_sendByte>
			USART_SendString("LED_2 ON/OFF \n");	// Send status of LED_2 to Bluetooth receiver/transmitter
  c0:	8f e6       	ldi	r24, 0x6F	; 111
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	0e 94 a2 00 	call	0x144	; 0x144 <USART_SendString>
  c8:	ea cf       	rjmp	.-44     	; 0x9e <main+0x1c>

000000ca <SPI_initMaster>:
	SPCR = ((1<<6) | (1<<5) | (1<<1) | (1<<0));

	/* Status Register: SPSR
	 * bit 0: Double speed 2x
	 */
	SPSR |= (1<<0);
  ca:	80 eb       	ldi	r24, 0xB0	; 176
  cc:	87 bb       	out	0x17, r24	; 23
  ce:	87 b3       	in	r24, 0x17	; 23
  d0:	8f 7b       	andi	r24, 0xBF	; 191
  d2:	87 bb       	out	0x17, r24	; 23
  d4:	83 e7       	ldi	r24, 0x73	; 115
  d6:	8d b9       	out	0x0d, r24	; 13
  d8:	8e b1       	in	r24, 0x0e	; 14
  da:	81 60       	ori	r24, 0x01	; 1
  dc:	8e b9       	out	0x0e, r24	; 14
  de:	08 95       	ret

000000e0 <SPI_sendByte>:
}

void SPI_sendByte(const unsigned char data)
{
	SPDR = data;  //SPDR --> Data Register
  e0:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<7))) //wait until data is sent correctly  {BIT_IS_CLEAR(SPSR,SPIF)}
  e2:	77 9b       	sbis	0x0e, 7	; 14
  e4:	fe cf       	rjmp	.-4      	; 0xe2 <SPI_sendByte+0x2>
	{}						//Check if interrupt Flag = 0 then enter while and wait until = 1 then exit while
}
  e6:	08 95       	ret

000000e8 <USART_Init>:
#include "USART.h"

void USART_Init(unsigned long BAUDRATE)				/* USART initialize function */
{
	UCSRA |=(1 << U2X);									/* DOUBLE_SPEED_MODE */
  e8:	2b b1       	in	r18, 0x0b	; 11
  ea:	22 60       	ori	r18, 0x02	; 2
  ec:	2b b9       	out	0x0b, r18	; 11
	UCSRB |= (1 << RXEN) | (1 << TXEN) | (1 << RXCIE);	/* Enable USART transmitter and receiver */
  ee:	2a b1       	in	r18, 0x0a	; 10
  f0:	28 69       	ori	r18, 0x98	; 152
  f2:	2a b9       	out	0x0a, r18	; 10
	UCSRC |= (1 << URSEL)| (1 << UCSZ0) | (1 << UCSZ1);	/* Write USCRC for 8 bit data and 1 stop bit */
  f4:	20 b5       	in	r18, 0x20	; 32
  f6:	26 68       	ori	r18, 0x86	; 134
  f8:	20 bd       	out	0x20, r18	; 32
	UBRRL = BAUD_PRESCALE;							/* Load UBRRL with lower 8 bit of prescale value */
  fa:	0e 94 cd 01 	call	0x39a	; 0x39a <__floatunsisf>
  fe:	20 e0       	ldi	r18, 0x00	; 0
 100:	30 e0       	ldi	r19, 0x00	; 0
 102:	40 e0       	ldi	r20, 0x00	; 0
 104:	51 e4       	ldi	r21, 0x41	; 65
 106:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__mulsf3>
 10a:	9b 01       	movw	r18, r22
 10c:	ac 01       	movw	r20, r24
 10e:	60 e0       	ldi	r22, 0x00	; 0
 110:	74 e2       	ldi	r23, 0x24	; 36
 112:	84 e7       	ldi	r24, 0x74	; 116
 114:	9b e4       	ldi	r25, 0x4B	; 75
 116:	0e 94 25 01 	call	0x24a	; 0x24a <__divsf3>
 11a:	20 e0       	ldi	r18, 0x00	; 0
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	40 e8       	ldi	r20, 0x80	; 128
 120:	5f e3       	ldi	r21, 0x3F	; 63
 122:	0e 94 b8 00 	call	0x170	; 0x170 <__subsf3>
 126:	0e 94 c8 02 	call	0x590	; 0x590 <round>
 12a:	0e 94 97 01 	call	0x32e	; 0x32e <__fixsfsi>
 12e:	69 b9       	out	0x09, r22	; 9
	UBRRH = (BAUD_PRESCALE >> 8);					/* Load UBRRH with upper 8 bit of prescale value */
 130:	70 bd       	out	0x20, r23	; 32
 132:	08 95       	ret

00000134 <USART_RxChar>:
}

char USART_RxChar()									/* Data receiving function */
{
	while (!(UCSRA & (1 << RXC)));					/* Wait until new data receive */
 134:	5f 9b       	sbis	0x0b, 7	; 11
 136:	fe cf       	rjmp	.-4      	; 0x134 <USART_RxChar>
	return(UDR);									/* Get and return received data */
 138:	8c b1       	in	r24, 0x0c	; 12
}
 13a:	08 95       	ret

0000013c <USART_TxChar>:

void USART_TxChar(char data)						/* Data transmitting function */
{
	UDR = data;										/* Write data to be transmitting in UDR */
 13c:	8c b9       	out	0x0c, r24	; 12
	while (!(UCSRA & (1<<UDRE)));					/* Wait until data transmit and buffer get empty */
 13e:	5d 9b       	sbis	0x0b, 5	; 11
 140:	fe cf       	rjmp	.-4      	; 0x13e <USART_TxChar+0x2>
}
 142:	08 95       	ret

00000144 <USART_SendString>:

void USART_SendString(char *str)					/* Send string of USART data function */
{
 144:	0f 93       	push	r16
 146:	1f 93       	push	r17
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	8c 01       	movw	r16, r24
	int i=0;
 14e:	c0 e0       	ldi	r28, 0x00	; 0
 150:	d0 e0       	ldi	r29, 0x00	; 0
	while (str[i]!= '\0')
 152:	03 c0       	rjmp	.+6      	; 0x15a <USART_SendString+0x16>
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
 154:	0e 94 9e 00 	call	0x13c	; 0x13c <USART_TxChar>
		i++;
 158:	21 96       	adiw	r28, 0x01	; 1
}

void USART_SendString(char *str)					/* Send string of USART data function */
{
	int i=0;
	while (str[i]!= '\0')
 15a:	f8 01       	movw	r30, r16
 15c:	ec 0f       	add	r30, r28
 15e:	fd 1f       	adc	r31, r29
 160:	80 81       	ld	r24, Z
 162:	81 11       	cpse	r24, r1
 164:	f7 cf       	rjmp	.-18     	; 0x154 <USART_SendString+0x10>
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
		i++;
	}
 166:	df 91       	pop	r29
 168:	cf 91       	pop	r28
 16a:	1f 91       	pop	r17
 16c:	0f 91       	pop	r16
 16e:	08 95       	ret

00000170 <__subsf3>:
 170:	50 58       	subi	r21, 0x80	; 128

00000172 <__addsf3>:
 172:	bb 27       	eor	r27, r27
 174:	aa 27       	eor	r26, r26
 176:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <__addsf3x>
 17a:	0c 94 21 02 	jmp	0x442	; 0x442 <__fp_round>
 17e:	0e 94 13 02 	call	0x426	; 0x426 <__fp_pscA>
 182:	38 f0       	brcs	.+14     	; 0x192 <__addsf3+0x20>
 184:	0e 94 1a 02 	call	0x434	; 0x434 <__fp_pscB>
 188:	20 f0       	brcs	.+8      	; 0x192 <__addsf3+0x20>
 18a:	39 f4       	brne	.+14     	; 0x19a <__addsf3+0x28>
 18c:	9f 3f       	cpi	r25, 0xFF	; 255
 18e:	19 f4       	brne	.+6      	; 0x196 <__addsf3+0x24>
 190:	26 f4       	brtc	.+8      	; 0x19a <__addsf3+0x28>
 192:	0c 94 10 02 	jmp	0x420	; 0x420 <__fp_nan>
 196:	0e f4       	brtc	.+2      	; 0x19a <__addsf3+0x28>
 198:	e0 95       	com	r30
 19a:	e7 fb       	bst	r30, 7
 19c:	0c 94 0a 02 	jmp	0x414	; 0x414 <__fp_inf>

000001a0 <__addsf3x>:
 1a0:	e9 2f       	mov	r30, r25
 1a2:	0e 94 32 02 	call	0x464	; 0x464 <__fp_split3>
 1a6:	58 f3       	brcs	.-42     	; 0x17e <__addsf3+0xc>
 1a8:	ba 17       	cp	r27, r26
 1aa:	62 07       	cpc	r22, r18
 1ac:	73 07       	cpc	r23, r19
 1ae:	84 07       	cpc	r24, r20
 1b0:	95 07       	cpc	r25, r21
 1b2:	20 f0       	brcs	.+8      	; 0x1bc <__addsf3x+0x1c>
 1b4:	79 f4       	brne	.+30     	; 0x1d4 <__addsf3x+0x34>
 1b6:	a6 f5       	brtc	.+104    	; 0x220 <__addsf3x+0x80>
 1b8:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_zero>
 1bc:	0e f4       	brtc	.+2      	; 0x1c0 <__addsf3x+0x20>
 1be:	e0 95       	com	r30
 1c0:	0b 2e       	mov	r0, r27
 1c2:	ba 2f       	mov	r27, r26
 1c4:	a0 2d       	mov	r26, r0
 1c6:	0b 01       	movw	r0, r22
 1c8:	b9 01       	movw	r22, r18
 1ca:	90 01       	movw	r18, r0
 1cc:	0c 01       	movw	r0, r24
 1ce:	ca 01       	movw	r24, r20
 1d0:	a0 01       	movw	r20, r0
 1d2:	11 24       	eor	r1, r1
 1d4:	ff 27       	eor	r31, r31
 1d6:	59 1b       	sub	r21, r25
 1d8:	99 f0       	breq	.+38     	; 0x200 <__addsf3x+0x60>
 1da:	59 3f       	cpi	r21, 0xF9	; 249
 1dc:	50 f4       	brcc	.+20     	; 0x1f2 <__addsf3x+0x52>
 1de:	50 3e       	cpi	r21, 0xE0	; 224
 1e0:	68 f1       	brcs	.+90     	; 0x23c <__addsf3x+0x9c>
 1e2:	1a 16       	cp	r1, r26
 1e4:	f0 40       	sbci	r31, 0x00	; 0
 1e6:	a2 2f       	mov	r26, r18
 1e8:	23 2f       	mov	r18, r19
 1ea:	34 2f       	mov	r19, r20
 1ec:	44 27       	eor	r20, r20
 1ee:	58 5f       	subi	r21, 0xF8	; 248
 1f0:	f3 cf       	rjmp	.-26     	; 0x1d8 <__addsf3x+0x38>
 1f2:	46 95       	lsr	r20
 1f4:	37 95       	ror	r19
 1f6:	27 95       	ror	r18
 1f8:	a7 95       	ror	r26
 1fa:	f0 40       	sbci	r31, 0x00	; 0
 1fc:	53 95       	inc	r21
 1fe:	c9 f7       	brne	.-14     	; 0x1f2 <__addsf3x+0x52>
 200:	7e f4       	brtc	.+30     	; 0x220 <__addsf3x+0x80>
 202:	1f 16       	cp	r1, r31
 204:	ba 0b       	sbc	r27, r26
 206:	62 0b       	sbc	r22, r18
 208:	73 0b       	sbc	r23, r19
 20a:	84 0b       	sbc	r24, r20
 20c:	ba f0       	brmi	.+46     	; 0x23c <__addsf3x+0x9c>
 20e:	91 50       	subi	r25, 0x01	; 1
 210:	a1 f0       	breq	.+40     	; 0x23a <__addsf3x+0x9a>
 212:	ff 0f       	add	r31, r31
 214:	bb 1f       	adc	r27, r27
 216:	66 1f       	adc	r22, r22
 218:	77 1f       	adc	r23, r23
 21a:	88 1f       	adc	r24, r24
 21c:	c2 f7       	brpl	.-16     	; 0x20e <__addsf3x+0x6e>
 21e:	0e c0       	rjmp	.+28     	; 0x23c <__addsf3x+0x9c>
 220:	ba 0f       	add	r27, r26
 222:	62 1f       	adc	r22, r18
 224:	73 1f       	adc	r23, r19
 226:	84 1f       	adc	r24, r20
 228:	48 f4       	brcc	.+18     	; 0x23c <__addsf3x+0x9c>
 22a:	87 95       	ror	r24
 22c:	77 95       	ror	r23
 22e:	67 95       	ror	r22
 230:	b7 95       	ror	r27
 232:	f7 95       	ror	r31
 234:	9e 3f       	cpi	r25, 0xFE	; 254
 236:	08 f0       	brcs	.+2      	; 0x23a <__addsf3x+0x9a>
 238:	b0 cf       	rjmp	.-160    	; 0x19a <__addsf3+0x28>
 23a:	93 95       	inc	r25
 23c:	88 0f       	add	r24, r24
 23e:	08 f0       	brcs	.+2      	; 0x242 <__addsf3x+0xa2>
 240:	99 27       	eor	r25, r25
 242:	ee 0f       	add	r30, r30
 244:	97 95       	ror	r25
 246:	87 95       	ror	r24
 248:	08 95       	ret

0000024a <__divsf3>:
 24a:	0e 94 39 01 	call	0x272	; 0x272 <__divsf3x>
 24e:	0c 94 21 02 	jmp	0x442	; 0x442 <__fp_round>
 252:	0e 94 1a 02 	call	0x434	; 0x434 <__fp_pscB>
 256:	58 f0       	brcs	.+22     	; 0x26e <__divsf3+0x24>
 258:	0e 94 13 02 	call	0x426	; 0x426 <__fp_pscA>
 25c:	40 f0       	brcs	.+16     	; 0x26e <__divsf3+0x24>
 25e:	29 f4       	brne	.+10     	; 0x26a <__divsf3+0x20>
 260:	5f 3f       	cpi	r21, 0xFF	; 255
 262:	29 f0       	breq	.+10     	; 0x26e <__divsf3+0x24>
 264:	0c 94 0a 02 	jmp	0x414	; 0x414 <__fp_inf>
 268:	51 11       	cpse	r21, r1
 26a:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_szero>
 26e:	0c 94 10 02 	jmp	0x420	; 0x420 <__fp_nan>

00000272 <__divsf3x>:
 272:	0e 94 32 02 	call	0x464	; 0x464 <__fp_split3>
 276:	68 f3       	brcs	.-38     	; 0x252 <__divsf3+0x8>

00000278 <__divsf3_pse>:
 278:	99 23       	and	r25, r25
 27a:	b1 f3       	breq	.-20     	; 0x268 <__divsf3+0x1e>
 27c:	55 23       	and	r21, r21
 27e:	91 f3       	breq	.-28     	; 0x264 <__divsf3+0x1a>
 280:	95 1b       	sub	r25, r21
 282:	55 0b       	sbc	r21, r21
 284:	bb 27       	eor	r27, r27
 286:	aa 27       	eor	r26, r26
 288:	62 17       	cp	r22, r18
 28a:	73 07       	cpc	r23, r19
 28c:	84 07       	cpc	r24, r20
 28e:	38 f0       	brcs	.+14     	; 0x29e <__divsf3_pse+0x26>
 290:	9f 5f       	subi	r25, 0xFF	; 255
 292:	5f 4f       	sbci	r21, 0xFF	; 255
 294:	22 0f       	add	r18, r18
 296:	33 1f       	adc	r19, r19
 298:	44 1f       	adc	r20, r20
 29a:	aa 1f       	adc	r26, r26
 29c:	a9 f3       	breq	.-22     	; 0x288 <__divsf3_pse+0x10>
 29e:	35 d0       	rcall	.+106    	; 0x30a <__divsf3_pse+0x92>
 2a0:	0e 2e       	mov	r0, r30
 2a2:	3a f0       	brmi	.+14     	; 0x2b2 <__divsf3_pse+0x3a>
 2a4:	e0 e8       	ldi	r30, 0x80	; 128
 2a6:	32 d0       	rcall	.+100    	; 0x30c <__divsf3_pse+0x94>
 2a8:	91 50       	subi	r25, 0x01	; 1
 2aa:	50 40       	sbci	r21, 0x00	; 0
 2ac:	e6 95       	lsr	r30
 2ae:	00 1c       	adc	r0, r0
 2b0:	ca f7       	brpl	.-14     	; 0x2a4 <__divsf3_pse+0x2c>
 2b2:	2b d0       	rcall	.+86     	; 0x30a <__divsf3_pse+0x92>
 2b4:	fe 2f       	mov	r31, r30
 2b6:	29 d0       	rcall	.+82     	; 0x30a <__divsf3_pse+0x92>
 2b8:	66 0f       	add	r22, r22
 2ba:	77 1f       	adc	r23, r23
 2bc:	88 1f       	adc	r24, r24
 2be:	bb 1f       	adc	r27, r27
 2c0:	26 17       	cp	r18, r22
 2c2:	37 07       	cpc	r19, r23
 2c4:	48 07       	cpc	r20, r24
 2c6:	ab 07       	cpc	r26, r27
 2c8:	b0 e8       	ldi	r27, 0x80	; 128
 2ca:	09 f0       	breq	.+2      	; 0x2ce <__divsf3_pse+0x56>
 2cc:	bb 0b       	sbc	r27, r27
 2ce:	80 2d       	mov	r24, r0
 2d0:	bf 01       	movw	r22, r30
 2d2:	ff 27       	eor	r31, r31
 2d4:	93 58       	subi	r25, 0x83	; 131
 2d6:	5f 4f       	sbci	r21, 0xFF	; 255
 2d8:	3a f0       	brmi	.+14     	; 0x2e8 <__divsf3_pse+0x70>
 2da:	9e 3f       	cpi	r25, 0xFE	; 254
 2dc:	51 05       	cpc	r21, r1
 2de:	78 f0       	brcs	.+30     	; 0x2fe <__divsf3_pse+0x86>
 2e0:	0c 94 0a 02 	jmp	0x414	; 0x414 <__fp_inf>
 2e4:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_szero>
 2e8:	5f 3f       	cpi	r21, 0xFF	; 255
 2ea:	e4 f3       	brlt	.-8      	; 0x2e4 <__divsf3_pse+0x6c>
 2ec:	98 3e       	cpi	r25, 0xE8	; 232
 2ee:	d4 f3       	brlt	.-12     	; 0x2e4 <__divsf3_pse+0x6c>
 2f0:	86 95       	lsr	r24
 2f2:	77 95       	ror	r23
 2f4:	67 95       	ror	r22
 2f6:	b7 95       	ror	r27
 2f8:	f7 95       	ror	r31
 2fa:	9f 5f       	subi	r25, 0xFF	; 255
 2fc:	c9 f7       	brne	.-14     	; 0x2f0 <__divsf3_pse+0x78>
 2fe:	88 0f       	add	r24, r24
 300:	91 1d       	adc	r25, r1
 302:	96 95       	lsr	r25
 304:	87 95       	ror	r24
 306:	97 f9       	bld	r25, 7
 308:	08 95       	ret
 30a:	e1 e0       	ldi	r30, 0x01	; 1
 30c:	66 0f       	add	r22, r22
 30e:	77 1f       	adc	r23, r23
 310:	88 1f       	adc	r24, r24
 312:	bb 1f       	adc	r27, r27
 314:	62 17       	cp	r22, r18
 316:	73 07       	cpc	r23, r19
 318:	84 07       	cpc	r24, r20
 31a:	ba 07       	cpc	r27, r26
 31c:	20 f0       	brcs	.+8      	; 0x326 <__divsf3_pse+0xae>
 31e:	62 1b       	sub	r22, r18
 320:	73 0b       	sbc	r23, r19
 322:	84 0b       	sbc	r24, r20
 324:	ba 0b       	sbc	r27, r26
 326:	ee 1f       	adc	r30, r30
 328:	88 f7       	brcc	.-30     	; 0x30c <__divsf3_pse+0x94>
 32a:	e0 95       	com	r30
 32c:	08 95       	ret

0000032e <__fixsfsi>:
 32e:	0e 94 9e 01 	call	0x33c	; 0x33c <__fixunssfsi>
 332:	68 94       	set
 334:	b1 11       	cpse	r27, r1
 336:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_szero>
 33a:	08 95       	ret

0000033c <__fixunssfsi>:
 33c:	0e 94 3a 02 	call	0x474	; 0x474 <__fp_splitA>
 340:	88 f0       	brcs	.+34     	; 0x364 <__fixunssfsi+0x28>
 342:	9f 57       	subi	r25, 0x7F	; 127
 344:	98 f0       	brcs	.+38     	; 0x36c <__fixunssfsi+0x30>
 346:	b9 2f       	mov	r27, r25
 348:	99 27       	eor	r25, r25
 34a:	b7 51       	subi	r27, 0x17	; 23
 34c:	b0 f0       	brcs	.+44     	; 0x37a <__fixunssfsi+0x3e>
 34e:	e1 f0       	breq	.+56     	; 0x388 <__fixunssfsi+0x4c>
 350:	66 0f       	add	r22, r22
 352:	77 1f       	adc	r23, r23
 354:	88 1f       	adc	r24, r24
 356:	99 1f       	adc	r25, r25
 358:	1a f0       	brmi	.+6      	; 0x360 <__fixunssfsi+0x24>
 35a:	ba 95       	dec	r27
 35c:	c9 f7       	brne	.-14     	; 0x350 <__fixunssfsi+0x14>
 35e:	14 c0       	rjmp	.+40     	; 0x388 <__fixunssfsi+0x4c>
 360:	b1 30       	cpi	r27, 0x01	; 1
 362:	91 f0       	breq	.+36     	; 0x388 <__fixunssfsi+0x4c>
 364:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__fp_zero>
 368:	b1 e0       	ldi	r27, 0x01	; 1
 36a:	08 95       	ret
 36c:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_zero>
 370:	67 2f       	mov	r22, r23
 372:	78 2f       	mov	r23, r24
 374:	88 27       	eor	r24, r24
 376:	b8 5f       	subi	r27, 0xF8	; 248
 378:	39 f0       	breq	.+14     	; 0x388 <__fixunssfsi+0x4c>
 37a:	b9 3f       	cpi	r27, 0xF9	; 249
 37c:	cc f3       	brlt	.-14     	; 0x370 <__fixunssfsi+0x34>
 37e:	86 95       	lsr	r24
 380:	77 95       	ror	r23
 382:	67 95       	ror	r22
 384:	b3 95       	inc	r27
 386:	d9 f7       	brne	.-10     	; 0x37e <__fixunssfsi+0x42>
 388:	3e f4       	brtc	.+14     	; 0x398 <__fixunssfsi+0x5c>
 38a:	90 95       	com	r25
 38c:	80 95       	com	r24
 38e:	70 95       	com	r23
 390:	61 95       	neg	r22
 392:	7f 4f       	sbci	r23, 0xFF	; 255
 394:	8f 4f       	sbci	r24, 0xFF	; 255
 396:	9f 4f       	sbci	r25, 0xFF	; 255
 398:	08 95       	ret

0000039a <__floatunsisf>:
 39a:	e8 94       	clt
 39c:	09 c0       	rjmp	.+18     	; 0x3b0 <__floatsisf+0x12>

0000039e <__floatsisf>:
 39e:	97 fb       	bst	r25, 7
 3a0:	3e f4       	brtc	.+14     	; 0x3b0 <__floatsisf+0x12>
 3a2:	90 95       	com	r25
 3a4:	80 95       	com	r24
 3a6:	70 95       	com	r23
 3a8:	61 95       	neg	r22
 3aa:	7f 4f       	sbci	r23, 0xFF	; 255
 3ac:	8f 4f       	sbci	r24, 0xFF	; 255
 3ae:	9f 4f       	sbci	r25, 0xFF	; 255
 3b0:	99 23       	and	r25, r25
 3b2:	a9 f0       	breq	.+42     	; 0x3de <__floatsisf+0x40>
 3b4:	f9 2f       	mov	r31, r25
 3b6:	96 e9       	ldi	r25, 0x96	; 150
 3b8:	bb 27       	eor	r27, r27
 3ba:	93 95       	inc	r25
 3bc:	f6 95       	lsr	r31
 3be:	87 95       	ror	r24
 3c0:	77 95       	ror	r23
 3c2:	67 95       	ror	r22
 3c4:	b7 95       	ror	r27
 3c6:	f1 11       	cpse	r31, r1
 3c8:	f8 cf       	rjmp	.-16     	; 0x3ba <__floatsisf+0x1c>
 3ca:	fa f4       	brpl	.+62     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3cc:	bb 0f       	add	r27, r27
 3ce:	11 f4       	brne	.+4      	; 0x3d4 <__floatsisf+0x36>
 3d0:	60 ff       	sbrs	r22, 0
 3d2:	1b c0       	rjmp	.+54     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3d4:	6f 5f       	subi	r22, 0xFF	; 255
 3d6:	7f 4f       	sbci	r23, 0xFF	; 255
 3d8:	8f 4f       	sbci	r24, 0xFF	; 255
 3da:	9f 4f       	sbci	r25, 0xFF	; 255
 3dc:	16 c0       	rjmp	.+44     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3de:	88 23       	and	r24, r24
 3e0:	11 f0       	breq	.+4      	; 0x3e6 <__floatsisf+0x48>
 3e2:	96 e9       	ldi	r25, 0x96	; 150
 3e4:	11 c0       	rjmp	.+34     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 3e6:	77 23       	and	r23, r23
 3e8:	21 f0       	breq	.+8      	; 0x3f2 <__floatsisf+0x54>
 3ea:	9e e8       	ldi	r25, 0x8E	; 142
 3ec:	87 2f       	mov	r24, r23
 3ee:	76 2f       	mov	r23, r22
 3f0:	05 c0       	rjmp	.+10     	; 0x3fc <__floatsisf+0x5e>
 3f2:	66 23       	and	r22, r22
 3f4:	71 f0       	breq	.+28     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 3f6:	96 e8       	ldi	r25, 0x86	; 134
 3f8:	86 2f       	mov	r24, r22
 3fa:	70 e0       	ldi	r23, 0x00	; 0
 3fc:	60 e0       	ldi	r22, 0x00	; 0
 3fe:	2a f0       	brmi	.+10     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 400:	9a 95       	dec	r25
 402:	66 0f       	add	r22, r22
 404:	77 1f       	adc	r23, r23
 406:	88 1f       	adc	r24, r24
 408:	da f7       	brpl	.-10     	; 0x400 <__EEPROM_REGION_LENGTH__>
 40a:	88 0f       	add	r24, r24
 40c:	96 95       	lsr	r25
 40e:	87 95       	ror	r24
 410:	97 f9       	bld	r25, 7
 412:	08 95       	ret

00000414 <__fp_inf>:
 414:	97 f9       	bld	r25, 7
 416:	9f 67       	ori	r25, 0x7F	; 127
 418:	80 e8       	ldi	r24, 0x80	; 128
 41a:	70 e0       	ldi	r23, 0x00	; 0
 41c:	60 e0       	ldi	r22, 0x00	; 0
 41e:	08 95       	ret

00000420 <__fp_nan>:
 420:	9f ef       	ldi	r25, 0xFF	; 255
 422:	80 ec       	ldi	r24, 0xC0	; 192
 424:	08 95       	ret

00000426 <__fp_pscA>:
 426:	00 24       	eor	r0, r0
 428:	0a 94       	dec	r0
 42a:	16 16       	cp	r1, r22
 42c:	17 06       	cpc	r1, r23
 42e:	18 06       	cpc	r1, r24
 430:	09 06       	cpc	r0, r25
 432:	08 95       	ret

00000434 <__fp_pscB>:
 434:	00 24       	eor	r0, r0
 436:	0a 94       	dec	r0
 438:	12 16       	cp	r1, r18
 43a:	13 06       	cpc	r1, r19
 43c:	14 06       	cpc	r1, r20
 43e:	05 06       	cpc	r0, r21
 440:	08 95       	ret

00000442 <__fp_round>:
 442:	09 2e       	mov	r0, r25
 444:	03 94       	inc	r0
 446:	00 0c       	add	r0, r0
 448:	11 f4       	brne	.+4      	; 0x44e <__fp_round+0xc>
 44a:	88 23       	and	r24, r24
 44c:	52 f0       	brmi	.+20     	; 0x462 <__fp_round+0x20>
 44e:	bb 0f       	add	r27, r27
 450:	40 f4       	brcc	.+16     	; 0x462 <__fp_round+0x20>
 452:	bf 2b       	or	r27, r31
 454:	11 f4       	brne	.+4      	; 0x45a <__fp_round+0x18>
 456:	60 ff       	sbrs	r22, 0
 458:	04 c0       	rjmp	.+8      	; 0x462 <__fp_round+0x20>
 45a:	6f 5f       	subi	r22, 0xFF	; 255
 45c:	7f 4f       	sbci	r23, 0xFF	; 255
 45e:	8f 4f       	sbci	r24, 0xFF	; 255
 460:	9f 4f       	sbci	r25, 0xFF	; 255
 462:	08 95       	ret

00000464 <__fp_split3>:
 464:	57 fd       	sbrc	r21, 7
 466:	90 58       	subi	r25, 0x80	; 128
 468:	44 0f       	add	r20, r20
 46a:	55 1f       	adc	r21, r21
 46c:	59 f0       	breq	.+22     	; 0x484 <__fp_splitA+0x10>
 46e:	5f 3f       	cpi	r21, 0xFF	; 255
 470:	71 f0       	breq	.+28     	; 0x48e <__fp_splitA+0x1a>
 472:	47 95       	ror	r20

00000474 <__fp_splitA>:
 474:	88 0f       	add	r24, r24
 476:	97 fb       	bst	r25, 7
 478:	99 1f       	adc	r25, r25
 47a:	61 f0       	breq	.+24     	; 0x494 <__fp_splitA+0x20>
 47c:	9f 3f       	cpi	r25, 0xFF	; 255
 47e:	79 f0       	breq	.+30     	; 0x49e <__fp_splitA+0x2a>
 480:	87 95       	ror	r24
 482:	08 95       	ret
 484:	12 16       	cp	r1, r18
 486:	13 06       	cpc	r1, r19
 488:	14 06       	cpc	r1, r20
 48a:	55 1f       	adc	r21, r21
 48c:	f2 cf       	rjmp	.-28     	; 0x472 <__fp_split3+0xe>
 48e:	46 95       	lsr	r20
 490:	f1 df       	rcall	.-30     	; 0x474 <__fp_splitA>
 492:	08 c0       	rjmp	.+16     	; 0x4a4 <__fp_splitA+0x30>
 494:	16 16       	cp	r1, r22
 496:	17 06       	cpc	r1, r23
 498:	18 06       	cpc	r1, r24
 49a:	99 1f       	adc	r25, r25
 49c:	f1 cf       	rjmp	.-30     	; 0x480 <__fp_splitA+0xc>
 49e:	86 95       	lsr	r24
 4a0:	71 05       	cpc	r23, r1
 4a2:	61 05       	cpc	r22, r1
 4a4:	08 94       	sec
 4a6:	08 95       	ret

000004a8 <__fp_zero>:
 4a8:	e8 94       	clt

000004aa <__fp_szero>:
 4aa:	bb 27       	eor	r27, r27
 4ac:	66 27       	eor	r22, r22
 4ae:	77 27       	eor	r23, r23
 4b0:	cb 01       	movw	r24, r22
 4b2:	97 f9       	bld	r25, 7
 4b4:	08 95       	ret

000004b6 <__mulsf3>:
 4b6:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__mulsf3x>
 4ba:	0c 94 21 02 	jmp	0x442	; 0x442 <__fp_round>
 4be:	0e 94 13 02 	call	0x426	; 0x426 <__fp_pscA>
 4c2:	38 f0       	brcs	.+14     	; 0x4d2 <__mulsf3+0x1c>
 4c4:	0e 94 1a 02 	call	0x434	; 0x434 <__fp_pscB>
 4c8:	20 f0       	brcs	.+8      	; 0x4d2 <__mulsf3+0x1c>
 4ca:	95 23       	and	r25, r21
 4cc:	11 f0       	breq	.+4      	; 0x4d2 <__mulsf3+0x1c>
 4ce:	0c 94 0a 02 	jmp	0x414	; 0x414 <__fp_inf>
 4d2:	0c 94 10 02 	jmp	0x420	; 0x420 <__fp_nan>
 4d6:	11 24       	eor	r1, r1
 4d8:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_szero>

000004dc <__mulsf3x>:
 4dc:	0e 94 32 02 	call	0x464	; 0x464 <__fp_split3>
 4e0:	70 f3       	brcs	.-36     	; 0x4be <__mulsf3+0x8>

000004e2 <__mulsf3_pse>:
 4e2:	95 9f       	mul	r25, r21
 4e4:	c1 f3       	breq	.-16     	; 0x4d6 <__mulsf3+0x20>
 4e6:	95 0f       	add	r25, r21
 4e8:	50 e0       	ldi	r21, 0x00	; 0
 4ea:	55 1f       	adc	r21, r21
 4ec:	62 9f       	mul	r22, r18
 4ee:	f0 01       	movw	r30, r0
 4f0:	72 9f       	mul	r23, r18
 4f2:	bb 27       	eor	r27, r27
 4f4:	f0 0d       	add	r31, r0
 4f6:	b1 1d       	adc	r27, r1
 4f8:	63 9f       	mul	r22, r19
 4fa:	aa 27       	eor	r26, r26
 4fc:	f0 0d       	add	r31, r0
 4fe:	b1 1d       	adc	r27, r1
 500:	aa 1f       	adc	r26, r26
 502:	64 9f       	mul	r22, r20
 504:	66 27       	eor	r22, r22
 506:	b0 0d       	add	r27, r0
 508:	a1 1d       	adc	r26, r1
 50a:	66 1f       	adc	r22, r22
 50c:	82 9f       	mul	r24, r18
 50e:	22 27       	eor	r18, r18
 510:	b0 0d       	add	r27, r0
 512:	a1 1d       	adc	r26, r1
 514:	62 1f       	adc	r22, r18
 516:	73 9f       	mul	r23, r19
 518:	b0 0d       	add	r27, r0
 51a:	a1 1d       	adc	r26, r1
 51c:	62 1f       	adc	r22, r18
 51e:	83 9f       	mul	r24, r19
 520:	a0 0d       	add	r26, r0
 522:	61 1d       	adc	r22, r1
 524:	22 1f       	adc	r18, r18
 526:	74 9f       	mul	r23, r20
 528:	33 27       	eor	r19, r19
 52a:	a0 0d       	add	r26, r0
 52c:	61 1d       	adc	r22, r1
 52e:	23 1f       	adc	r18, r19
 530:	84 9f       	mul	r24, r20
 532:	60 0d       	add	r22, r0
 534:	21 1d       	adc	r18, r1
 536:	82 2f       	mov	r24, r18
 538:	76 2f       	mov	r23, r22
 53a:	6a 2f       	mov	r22, r26
 53c:	11 24       	eor	r1, r1
 53e:	9f 57       	subi	r25, 0x7F	; 127
 540:	50 40       	sbci	r21, 0x00	; 0
 542:	9a f0       	brmi	.+38     	; 0x56a <__mulsf3_pse+0x88>
 544:	f1 f0       	breq	.+60     	; 0x582 <__mulsf3_pse+0xa0>
 546:	88 23       	and	r24, r24
 548:	4a f0       	brmi	.+18     	; 0x55c <__mulsf3_pse+0x7a>
 54a:	ee 0f       	add	r30, r30
 54c:	ff 1f       	adc	r31, r31
 54e:	bb 1f       	adc	r27, r27
 550:	66 1f       	adc	r22, r22
 552:	77 1f       	adc	r23, r23
 554:	88 1f       	adc	r24, r24
 556:	91 50       	subi	r25, 0x01	; 1
 558:	50 40       	sbci	r21, 0x00	; 0
 55a:	a9 f7       	brne	.-22     	; 0x546 <__mulsf3_pse+0x64>
 55c:	9e 3f       	cpi	r25, 0xFE	; 254
 55e:	51 05       	cpc	r21, r1
 560:	80 f0       	brcs	.+32     	; 0x582 <__mulsf3_pse+0xa0>
 562:	0c 94 0a 02 	jmp	0x414	; 0x414 <__fp_inf>
 566:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_szero>
 56a:	5f 3f       	cpi	r21, 0xFF	; 255
 56c:	e4 f3       	brlt	.-8      	; 0x566 <__mulsf3_pse+0x84>
 56e:	98 3e       	cpi	r25, 0xE8	; 232
 570:	d4 f3       	brlt	.-12     	; 0x566 <__mulsf3_pse+0x84>
 572:	86 95       	lsr	r24
 574:	77 95       	ror	r23
 576:	67 95       	ror	r22
 578:	b7 95       	ror	r27
 57a:	f7 95       	ror	r31
 57c:	e7 95       	ror	r30
 57e:	9f 5f       	subi	r25, 0xFF	; 255
 580:	c1 f7       	brne	.-16     	; 0x572 <__mulsf3_pse+0x90>
 582:	fe 2b       	or	r31, r30
 584:	88 0f       	add	r24, r24
 586:	91 1d       	adc	r25, r1
 588:	96 95       	lsr	r25
 58a:	87 95       	ror	r24
 58c:	97 f9       	bld	r25, 7
 58e:	08 95       	ret

00000590 <round>:
 590:	0e 94 3a 02 	call	0x474	; 0x474 <__fp_splitA>
 594:	e8 f0       	brcs	.+58     	; 0x5d0 <round+0x40>
 596:	9e 37       	cpi	r25, 0x7E	; 126
 598:	e8 f0       	brcs	.+58     	; 0x5d4 <round+0x44>
 59a:	96 39       	cpi	r25, 0x96	; 150
 59c:	b8 f4       	brcc	.+46     	; 0x5cc <round+0x3c>
 59e:	9e 38       	cpi	r25, 0x8E	; 142
 5a0:	48 f4       	brcc	.+18     	; 0x5b4 <round+0x24>
 5a2:	67 2f       	mov	r22, r23
 5a4:	78 2f       	mov	r23, r24
 5a6:	88 27       	eor	r24, r24
 5a8:	98 5f       	subi	r25, 0xF8	; 248
 5aa:	f9 cf       	rjmp	.-14     	; 0x59e <round+0xe>
 5ac:	86 95       	lsr	r24
 5ae:	77 95       	ror	r23
 5b0:	67 95       	ror	r22
 5b2:	93 95       	inc	r25
 5b4:	95 39       	cpi	r25, 0x95	; 149
 5b6:	d0 f3       	brcs	.-12     	; 0x5ac <round+0x1c>
 5b8:	b6 2f       	mov	r27, r22
 5ba:	b1 70       	andi	r27, 0x01	; 1
 5bc:	6b 0f       	add	r22, r27
 5be:	71 1d       	adc	r23, r1
 5c0:	81 1d       	adc	r24, r1
 5c2:	20 f4       	brcc	.+8      	; 0x5cc <round+0x3c>
 5c4:	87 95       	ror	r24
 5c6:	77 95       	ror	r23
 5c8:	67 95       	ror	r22
 5ca:	93 95       	inc	r25
 5cc:	0c 94 ec 02 	jmp	0x5d8	; 0x5d8 <__fp_mintl>
 5d0:	0c 94 07 03 	jmp	0x60e	; 0x60e <__fp_mpack>
 5d4:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__fp_szero>

000005d8 <__fp_mintl>:
 5d8:	88 23       	and	r24, r24
 5da:	71 f4       	brne	.+28     	; 0x5f8 <__fp_mintl+0x20>
 5dc:	77 23       	and	r23, r23
 5de:	21 f0       	breq	.+8      	; 0x5e8 <__fp_mintl+0x10>
 5e0:	98 50       	subi	r25, 0x08	; 8
 5e2:	87 2b       	or	r24, r23
 5e4:	76 2f       	mov	r23, r22
 5e6:	07 c0       	rjmp	.+14     	; 0x5f6 <__fp_mintl+0x1e>
 5e8:	66 23       	and	r22, r22
 5ea:	11 f4       	brne	.+4      	; 0x5f0 <__fp_mintl+0x18>
 5ec:	99 27       	eor	r25, r25
 5ee:	0d c0       	rjmp	.+26     	; 0x60a <__fp_mintl+0x32>
 5f0:	90 51       	subi	r25, 0x10	; 16
 5f2:	86 2b       	or	r24, r22
 5f4:	70 e0       	ldi	r23, 0x00	; 0
 5f6:	60 e0       	ldi	r22, 0x00	; 0
 5f8:	2a f0       	brmi	.+10     	; 0x604 <__fp_mintl+0x2c>
 5fa:	9a 95       	dec	r25
 5fc:	66 0f       	add	r22, r22
 5fe:	77 1f       	adc	r23, r23
 600:	88 1f       	adc	r24, r24
 602:	da f7       	brpl	.-10     	; 0x5fa <__fp_mintl+0x22>
 604:	88 0f       	add	r24, r24
 606:	96 95       	lsr	r25
 608:	87 95       	ror	r24
 60a:	97 f9       	bld	r25, 7
 60c:	08 95       	ret

0000060e <__fp_mpack>:
 60e:	9f 3f       	cpi	r25, 0xFF	; 255
 610:	31 f0       	breq	.+12     	; 0x61e <__fp_mpack_finite+0xc>

00000612 <__fp_mpack_finite>:
 612:	91 50       	subi	r25, 0x01	; 1
 614:	20 f4       	brcc	.+8      	; 0x61e <__fp_mpack_finite+0xc>
 616:	87 95       	ror	r24
 618:	77 95       	ror	r23
 61a:	67 95       	ror	r22
 61c:	b7 95       	ror	r27
 61e:	88 0f       	add	r24, r24
 620:	91 1d       	adc	r25, r1
 622:	96 95       	lsr	r25
 624:	87 95       	ror	r24
 626:	97 f9       	bld	r25, 7
 628:	08 95       	ret

0000062a <_exit>:
 62a:	f8 94       	cli

0000062c <__stop_program>:
 62c:	ff cf       	rjmp	.-2      	; 0x62c <__stop_program>
